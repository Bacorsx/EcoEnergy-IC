# Generated by Django 5.2.6 on 2025-09-11 23:14

import django.core.validators
import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('core', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='Alert',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('estado', models.CharField(choices=[('ACTIVO', 'Activo'), ('INACTIVO', 'Inactivo')], default='ACTIVO', max_length=10)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('deleted_at', models.DateTimeField(blank=True, null=True)),
                ('severity', models.CharField(choices=[('GRAVE', 'Grave'), ('ALTO', 'Alto'), ('MEDIANO', 'Mediano')], max_length=10)),
                ('message', models.TextField()),
                ('is_resolved', models.BooleanField(default=False)),
                ('resolved_at', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'alert',
                'ordering': ['-created_at'],
                'indexes': [models.Index(fields=['severity'], name='alert_severit_877930_idx'), models.Index(fields=['is_resolved'], name='alert_is_reso_bfbffa_idx')],
            },
        ),
        migrations.CreateModel(
            name='Category',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('estado', models.CharField(choices=[('ACTIVO', 'Activo'), ('INACTIVO', 'Inactivo')], default='ACTIVO', max_length=10)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('deleted_at', models.DateTimeField(blank=True, null=True)),
                ('name', models.CharField(max_length=100)),
            ],
            options={
                'db_table': 'category',
                'ordering': ['name'],
                'indexes': [models.Index(fields=['name'], name='category_name_d601b7_idx')],
            },
        ),
        migrations.CreateModel(
            name='Device',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('estado', models.CharField(choices=[('ACTIVO', 'Activo'), ('INACTIVO', 'Inactivo')], default='ACTIVO', max_length=10)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('deleted_at', models.DateTimeField(blank=True, null=True)),
                ('name', models.CharField(max_length=150)),
                ('serial_number', models.CharField(blank=True, max_length=100, null=True)),
                ('installed_at', models.DateTimeField(blank=True, null=True)),
                ('organization', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='devices', to='core.organization')),
            ],
            options={
                'db_table': 'device',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='Product',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('estado', models.CharField(choices=[('ACTIVO', 'Activo'), ('INACTIVO', 'Inactivo')], default='ACTIVO', max_length=10)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('deleted_at', models.DateTimeField(blank=True, null=True)),
                ('name', models.CharField(max_length=150)),
                ('model', models.CharField(blank=True, max_length=100, null=True)),
                ('serial_number', models.CharField(blank=True, max_length=100, null=True)),
                ('category', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='products', to='dispositivos.category')),
                ('device', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='products', to='dispositivos.device')),
            ],
            options={
                'db_table': 'product',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='ProductAlert',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('estado', models.CharField(choices=[('ACTIVO', 'Activo'), ('INACTIVO', 'Inactivo')], default='ACTIVO', max_length=10)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('deleted_at', models.DateTimeField(blank=True, null=True)),
                ('range_min', models.FloatField()),
                ('range_max', models.FloatField()),
                ('unit', models.CharField(max_length=16)),
                ('alert', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='product_links', to='dispositivos.alert')),
                ('product', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='alert_links', to='dispositivos.product')),
            ],
            options={
                'db_table': 'product_alert',
            },
        ),
        migrations.AddField(
            model_name='product',
            name='alerts',
            field=models.ManyToManyField(related_name='products', through='dispositivos.ProductAlert', to='dispositivos.alert'),
        ),
        migrations.CreateModel(
            name='Zone',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('estado', models.CharField(choices=[('ACTIVO', 'Activo'), ('INACTIVO', 'Inactivo')], default='ACTIVO', max_length=10)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('deleted_at', models.DateTimeField(blank=True, null=True)),
                ('name', models.CharField(max_length=100)),
                ('organization', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='zones', to='core.organization')),
            ],
            options={
                'db_table': 'zone',
                'ordering': ['name'],
            },
        ),
        migrations.AddField(
            model_name='device',
            name='zone',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='devices', to='dispositivos.zone'),
        ),
        migrations.CreateModel(
            name='Measurement',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('estado', models.CharField(choices=[('ACTIVO', 'Activo'), ('INACTIVO', 'Inactivo')], default='ACTIVO', max_length=10)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('deleted_at', models.DateTimeField(blank=True, null=True)),
                ('value', models.FloatField(validators=[django.core.validators.MinValueValidator(0.0)])),
                ('unit', models.CharField(max_length=20)),
                ('measured_at', models.DateTimeField()),
                ('alert', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='measurements', to='dispositivos.alert')),
                ('product', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='measurements', to='dispositivos.product')),
            ],
            options={
                'db_table': 'measurement',
                'ordering': ['-measured_at'],
                'indexes': [models.Index(fields=['product'], name='measurement_product_aaa89e_idx'), models.Index(fields=['-measured_at'], name='measurement_measure_f3f822_idx')],
                'constraints': [models.CheckConstraint(condition=models.Q(('value__gte', 0)), name='measurement_value_gte_0')],
            },
        ),
        migrations.AddIndex(
            model_name='productalert',
            index=models.Index(fields=['product'], name='product_ale_product_42a12e_idx'),
        ),
        migrations.AddIndex(
            model_name='productalert',
            index=models.Index(fields=['alert'], name='product_ale_alert_i_132ada_idx'),
        ),
        migrations.AlterUniqueTogether(
            name='productalert',
            unique_together={('product', 'alert')},
        ),
        migrations.AddIndex(
            model_name='product',
            index=models.Index(fields=['device'], name='product_device__dcd332_idx'),
        ),
        migrations.AddIndex(
            model_name='product',
            index=models.Index(fields=['category'], name='product_categor_26b384_idx'),
        ),
        migrations.AddConstraint(
            model_name='product',
            constraint=models.UniqueConstraint(condition=models.Q(('device__isnull', False)), fields=('device', 'serial_number'), name='uq_products_device_serial_nonnull'),
        ),
        migrations.AddConstraint(
            model_name='product',
            constraint=models.UniqueConstraint(condition=models.Q(('device__isnull', True)), fields=('serial_number',), name='uq_products_serial_when_device_null'),
        ),
        migrations.AddIndex(
            model_name='zone',
            index=models.Index(fields=['organization', 'name'], name='zone_organiz_a2adb8_idx'),
        ),
        migrations.AddIndex(
            model_name='zone',
            index=models.Index(fields=['organization'], name='zone_organiz_27e408_idx'),
        ),
        migrations.AlterUniqueTogether(
            name='zone',
            unique_together={('organization', 'name')},
        ),
        migrations.AddIndex(
            model_name='device',
            index=models.Index(fields=['organization'], name='device_organiz_dfeb88_idx'),
        ),
        migrations.AddIndex(
            model_name='device',
            index=models.Index(fields=['zone'], name='device_zone_id_b296ed_idx'),
        ),
        migrations.AlterUniqueTogether(
            name='device',
            unique_together={('organization', 'serial_number')},
        ),
    ]
